<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>eu.xfsc.train</groupId>
        <artifactId>trusted-content-resolver</artifactId>
        <version>1.1.0-SNAPSHOT</version>
    </parent>

    <artifactId>trusted-content-resolver-service</artifactId>
    <packaging>jar</packaging>
    <name>trusted-content-resolver-service</name>
    <description>Eclipse XFSC TRAIN Trust Content Resolver Server Application</description>

    <dependencies>
        <dependency>
            <groupId>eu.xfsc.train</groupId>
            <artifactId>train-shared-model</artifactId>
        </dependency>
        <dependency>
            <groupId>eu.xfsc.train</groupId>
            <artifactId>trusted-content-resolver-java-client</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <!--scope>provided</scope-->
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-otlp</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-tracing</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-tracing-bridge-otel</artifactId>
        </dependency>

		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-exporter-common</artifactId>
		</dependency>
		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-exporter-otlp</artifactId>
		</dependency>
		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-exporter-otlp-common</artifactId>
		</dependency>
		<dependency>
			<groupId>io.opentelemetry.instrumentation</groupId>
			<artifactId>opentelemetry-logback-appender-1.0</artifactId>
		</dependency>
		<dependency>
			<groupId>io.opentelemetry.instrumentation</groupId>
			<artifactId>opentelemetry-instrumentation-api-semconv</artifactId>
		</dependency>
		
        <dependency>
            <groupId>com.github.ben-manes.caffeine</groupId>
            <artifactId>caffeine</artifactId>
        </dependency> 
        <dependency>
            <groupId>info.weboftrust</groupId>
            <artifactId>ld-signatures-java</artifactId>
        </dependency>
        <dependency>
            <groupId>decentralized-identity</groupId>
	        <artifactId>uni-resolver-client</artifactId>
        </dependency>
        <dependency>
            <groupId>decentralized-identity</groupId>
            <artifactId>uni-resolver-local</artifactId>
        </dependency>
        <dependency>
            <groupId>com.danubetech</groupId>
            <artifactId>verifiable-credentials-java</artifactId>
        </dependency>
		<dependency>
            <groupId>dnsjava</groupId>
            <artifactId>dnsjava</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.multiformats</groupId>
            <artifactId>java-multihash</artifactId>
        </dependency>
        <!--
        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
        </dependency>
		-->
        <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-runtime</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-xml</artifactId>
        </dependency>            
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-jakarta-xmlbind-annotations</artifactId>
        </dependency>
		
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
				<exclusion>
                    <groupId>com.vaadin.external.google</groupId>
                    <artifactId>android-json</artifactId>
				</exclusion>
			</exclusions>
        </dependency>
    </dependencies>

    <build>
        <plugins>
			<!--
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <configuration>
                    <configLocation>checkstyle.xml</configLocation>
                    <excludes>target/**/*</excludes>
                    <encoding>UTF-8</encoding>
                    <consoleOutput>true</consoleOutput>
                    <failsOnError>true</failsOnError>
                    <violationSeverity>warning</violationSeverity>
                    <failOnViolation>false</failOnViolation>
                    <linkXRef>false</linkXRef>
                </configuration>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            -->
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <configuration>
                    <generateModels>false</generateModels>
                </configuration>
                <executions>
                    <execution>
                        <id>generate-trusted-content-resolver-service</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <skipValidateSpec>true</skipValidateSpec>
                            <supportingFilesToGenerate>ApiUtil.java</supportingFilesToGenerate>
                            <inputSpec>${project.parent.basedir}/openapi/tcr_openapi.yaml</inputSpec>
                            <generatorName>spring</generatorName>
                            <modelPackage>eu.xfsc.train.tcr.api.generated.model</modelPackage>
                            <packageName>eu.xfsc.train.tcr.server.generated</packageName>
                            <apiPackage>eu.xfsc.train.tcr.server.generated.controller</apiPackage>
                            <generateApiTests>true</generateApiTests>
                            <generateApiDocumentation>true</generateApiDocumentation>
                            <configOptions>
                                <performBeanValidation>true</performBeanValidation>
                                <useBeanValidation>true</useBeanValidation>
                                <useTags>true</useTags>
                                <library>spring-boot</library>
                                <delegatePattern>true</delegatePattern>
                                <openApiNullable>false</openApiNullable>
                            </configOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                            <goal>build-info</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <configuration>
                    <skip>false</skip>
                    <to>
                        <image>${ci-registry}/${project.artifactId}:${tag.version}</image>
                        <auth>
                            <username>${env.HARBOR_USERNAME}</username>
                            <password>${env.HARBOR_PASSWORD}</password>
                        </auth>
                    </to>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
